# LAMMPS: Rigid Wall Line - Working Version
# Wall = vertical line of blue atoms, x-motion only

units           lj
dimension       2
atom_style      molecular
atom_modify     map yes
boundary        f f p

neighbor        0.5 bin
neigh_modify    delay 0 every 1 check yes

variable        L0 equal 10.0
variable        H equal 10.0
variable        T equal 0.5
variable        dt equal 0.0001
variable        pmass equal 1.0
variable        wall_particle_mass equal 1.0
variable        num_wall_particles equal 20

variable        hold_steps equal 50000
variable        run_steps equal 3000000
variable        thermo_freq equal 10000
variable        dump_freq equal 5000

region          box block -${L0} ${L0} -$(v_H/2) $(v_H/2) -0.5 0.5
create_box      2 box

# Create gas particles
lattice         sq 1.3
region          left_fill block -$(v_L0-0.5) -0.6 -$(v_H/2-0.5) $(v_H/2-0.5) -0.5 0.5
create_atoms    1 region left_fill
region          right_fill block 0.6 $(v_L0-0.5) -$(v_H/2-0.5) $(v_H/2-0.5) -0.5 0.5
create_atoms    1 region right_fill

variable        n_gas equal count(all)
if              "${n_gas} > 100" then "group extras id > 100" "delete_atoms group extras"

set             type 1 mol 0
mass            1 ${pmass}
group           particles type 1

# Create wall line
variable        dy_wall equal ${H}/${num_wall_particles}
variable        y_start equal -$(v_H/2)+v_dy_wall/2
variable        iwall loop ${num_wall_particles}
label           create_wall
variable        y_current equal v_y_start+(${iwall}-1)*v_dy_wall
create_atoms    2 single 0.0 ${y_current} 0.0
next            iwall
jump            SELF create_wall

group           wall_atoms type 2
set             type 2 mol 1
mass            2 ${wall_particle_mass}

print           "GAS: $(count(particles)), WALL: $(count(wall_atoms)) atoms"

# Rigid wall body
fix             rigid_wall wall_atoms rigid/small molecule
fix             wall_y_zero wall_atoms setforce NULL 0.0 0.0

# Potentials
pair_style      lj/cut 1.122462
pair_modify     shift yes
pair_coeff      1 1 0.5 1.0 1.122462
pair_coeff      1 2 0.5 1.0 1.122462
pair_coeff      2 2 0.5 1.0 1.122462

# Walls
fix             walls_y particles wall/reflect yhi EDGE ylo EDGE
fix             walls_x particles wall/reflect xhi EDGE xlo EDGE

# Initialize
velocity        particles create ${T} 87654 dist gaussian
velocity        particles scale ${T}
velocity        wall_atoms set 0.0 0.0 0.0

timestep        ${dt}
fix             nve_p particles nve

# Computes
compute         temp_p particles temp
compute         ke_p particles ke
compute         wall_com wall_atoms com

variable        wall_x equal c_wall_com[1]
variable        time_lj equal step*dt

region          left_side block -${L0} 0.0 -$(v_H/2) $(v_H/2) -0.5 0.5
region          right_side block 0.0 ${L0} -$(v_H/2) $(v_H/2) -0.5 0.5
group           left_p dynamic particles region left_side every 1000
group           right_p dynamic particles region right_side every 1000

variable        n_left equal count(left_p)
variable        n_right equal count(right_p)

# Output
thermo_style    custom step v_time_lj temp c_temp_p c_ke_p v_wall_x v_n_left v_n_right atoms
thermo          ${thermo_freq}

dump            traj all custom ${dump_freq} traj_wall_line.lammpstrj id mol type x y z vx vy vz
dump_modify     traj sort id

fix             wall_log all print 1000 "${time_lj} ${wall_x} ${n_left} ${n_right}" file wall_line.dat screen no title "# Time WallX NLeft NRight"

print           "RIGID WALL LINE: $(count(wall_atoms)) particles, X-MOTION ONLY"

fix             hold wall_atoms setforce 0.0 NULL NULL
run             ${hold_steps}
unfix           hold

run             ${run_steps}

write_data      final_wall_line.data
print           "DONE! Wall = vertical line of $(count(wall_atoms)) atoms (will appear as blue/red line in OVITO)"
