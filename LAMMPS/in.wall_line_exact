# LAMMPS: Rigid Wall Line (Blue) + Exactly 50+50 Particles
# Wall = vertical line, moves ONLY in x-direction
# Simple approach: use lattice to get close to 50+50, then adjust

units           lj
dimension       2
atom_style      molecular  # Need molecular for rigid body
atom_modify     map yes
boundary        f f p

neighbor        0.5 bin
neigh_modify    delay 0 every 1 check yes

# ============================================================================
# PARAMETERS
# ============================================================================

variable        L0 equal 10.0
variable        H equal 10.0
variable        T equal 0.5
variable        dt equal 0.0001

variable        pmass equal 1.0
variable        wall_particle_mass equal 1.0
variable        num_wall_particles equal 20

variable        hold_steps equal 50000
variable        run_steps equal 3000000

variable        thermo_freq equal 10000
variable        dump_freq equal 5000

# ============================================================================
# CREATE BOX (2 types, 2 molecules for rigid body)
# ============================================================================

region          box block -${L0} ${L0} -$(v_H/2) $(v_H/2) -0.5 0.5
create_box      2 box bond/types 0 extra/bond/per/atom 0 extra/special/per/atom 0

# ============================================================================
# CREATE GAS PARTICLES ON LATTICE
# ============================================================================

# Use lattice to get approximately 50 per side
# For ~50 particles in 9x9 region: sqrt(50) â‰ˆ 7, so spacing ~1.3
lattice         sq 1.3

# Left chamber
region          left_fill block -$(v_L0-0.5) -0.6 -$(v_H/2-0.5) $(v_H/2-0.5) -0.5 0.5
create_atoms    1 region left_fill

variable        n_left_initial equal count(all)

# Right chamber
region          right_fill block 0.6 $(v_L0-0.5) -$(v_H/2-0.5) $(v_H/2-0.5) -0.5 0.5
create_atoms    1 region right_fill

variable        n_total_gas equal count(all)
variable        n_right_initial equal v_n_total_gas-v_n_left_initial

print           "Created ${n_left_initial} particles LEFT, ${n_right_initial} particles RIGHT"
print           "Total gas: ${n_total_gas}"

# Adjust to exactly 100 if needed
if              "${n_total_gas} > 100" then &
    "group extras id > 100" &
    "delete_atoms group extras" &
    "print 'Adjusted to 100 particles'"

# Set gas particles to molecule 0 (not in rigid body)
set             type 1 mol 0
mass            1 ${pmass}

group           particles type 1

# ============================================================================
# CREATE WALL AS VERTICAL LINE (type 2, molecule 1 for rigid body)
# ============================================================================

# Create wall particles at x=0, evenly spaced in y
variable        dy_wall equal ${H}/${num_wall_particles}
variable        y_start equal -$(v_H/2)+v_dy_wall/2

# Create wall particles one by one
variable        iwall loop ${num_wall_particles}
label           create_wall
variable        y_current equal v_y_start+(${iwall}-1)*v_dy_wall
create_atoms    2 single 0.0 ${y_current} 0.0
next            iwall
jump            SELF create_wall

# Set all wall particles to molecule 1 (rigid body)
group           wall_atoms type 2
set             type 2 mol 1
mass            2 ${wall_particle_mass}

print           "WALL: Created $(count(wall_atoms)) particles in vertical line"
print           "TOTAL SYSTEM: $(count(all)) atoms"

# ============================================================================
# MAKE WALL RIGID AND CONSTRAIN TO X-MOTION ONLY
# ============================================================================

# Create rigid body from molecule 1 (wall particles)
fix             rigid_wall wall_atoms rigid/small molecule langevin ${T} ${T} $(100.0*v_dt) 428984

# CRITICAL: Constrain wall to x-motion only (zero y-forces)
fix             wall_y_zero wall_atoms setforce NULL 0.0 0.0

# ============================================================================
# POTENTIALS
# ============================================================================

pair_style      lj/cut 1.122462
pair_modify     shift yes

pair_coeff      1 1 0.5 1.0 1.122462
pair_coeff      1 2 0.5 1.0 1.122462
pair_coeff      2 2 0.5 1.0 1.122462

# ============================================================================
# BOUNDARY WALLS
# ============================================================================

fix             walls_y particles wall/reflect yhi EDGE ylo EDGE
fix             walls_x particles wall/reflect xhi EDGE xlo EDGE

# ============================================================================
# INITIALIZATION
# ============================================================================

velocity        particles create ${T} 87654 dist gaussian
velocity        particles scale ${T}
velocity        wall_atoms set 0.0 0.0 0.0

timestep        ${dt}

fix             nve_p particles nve

# ============================================================================
# COMPUTES
# ============================================================================

compute         temp_p particles temp
compute         ke_p particles ke

compute         wall_com wall_atoms com
compute         wall_vcm wall_atoms vcm

variable        wall_x equal c_wall_com[1]
variable        wall_vx equal c_wall_vcm[1]
variable        wall_mass_total equal count(wall_atoms)*v_wall_particle_mass
variable        ke_wall equal 0.5*v_wall_mass_total*v_wall_vx*v_wall_vx
variable        ke_total equal c_ke_p+v_ke_wall
variable        time_lj equal step*dt

region          left_side block -${L0} 0.0 -$(v_H/2) $(v_H/2) -0.5 0.5
region          right_side block 0.0 ${L0} -$(v_H/2) $(v_H/2) -0.5 0.5

group           left_p dynamic particles region left_side every 1000
group           right_p dynamic particles region right_side every 1000

variable        n_left equal count(left_p)
variable        n_right equal count(right_p)

# ============================================================================
# OUTPUT
# ============================================================================

thermo_style    custom step v_time_lj temp c_temp_p c_ke_p v_ke_wall v_ke_total &
                v_wall_x v_wall_vx v_n_left v_n_right atoms

thermo          ${thermo_freq}

# IMPORTANT: In OVITO, type 1 will be blue (gas), type 2 will be different color (wall)
dump            traj all custom ${dump_freq} traj_wall_line.lammpstrj &
                id mol type x y z vx vy vz

dump_modify     traj sort id

fix             wall_log all print 1000 &
                "$(step) ${time_lj} ${wall_x} ${wall_vx} ${n_left} ${n_right}" &
                file wall_line_exact.dat screen no &
                title "# Step Time WallX WallVx NLeft NRight"

# ============================================================================
# RUN
# ============================================================================

print           "========================================================"
print           "RIGID WALL LINE - EXACT CONFIGURATION"
print           "  Gas particles: $(count(particles))"
print           "  Wall particles: $(count(wall_atoms)) (vertical line at x=0)"
print           "  Wall motion: X-DIRECTION ONLY"
print           "  Wall mass total: ${wall_mass_total}"
print           "========================================================"

print           "Phase 1: Equilibration..."
fix             hold wall_atoms setforce 0.0 NULL NULL
run             ${hold_steps}
unfix           hold

print           "Phase 2: Free oscillation (x-only)..."
run             ${run_steps}

write_data      final_wall_line.data

print           "COMPLETE! Wall = $(count(wall_atoms)) blue atoms in vertical line"
