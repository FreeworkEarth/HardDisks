# LAMMPS: Paper Configuration - STABLE VERSION
# 50+50 particles, 300 time units
# More conservative parameters for long-term stability

units           lj
dimension       2
atom_style      atomic
atom_modify     map yes
boundary        f f p

neighbor        0.5 bin
neigh_modify    delay 0 every 1 check yes

# ============================================================================
# PARAMETERS
# ============================================================================

variable        L0 equal 15.0           # LARGER box for stability
variable        H equal 10.0
variable        T equal 0.3             # LOWER temperature
variable        dt equal 0.00005        # SMALLER timestep

variable        pmass equal 1.0
variable        wmass equal 50.0        # HEAVIER wall (slower, more stable)

# For 300 time units: 300 / 0.00005 = 6,000,000 steps
variable        hold_steps equal 100000   # 5 time units equilibration
variable        run_steps equal 6000000   # 300 time units measurement

variable        thermo_freq equal 10000   # Print every 0.5 time units
variable        dump_freq equal 20000     # Save every 1 time unit

# ============================================================================
# CREATE BOX
# ============================================================================

region          box block -${L0} ${L0} -$(v_H/2) $(v_H/2) -0.5 0.5
create_box      2 box

# ============================================================================
# CREATE EXACTLY 50+50 PARTICLES
# ============================================================================

# Manually create 50 particles on each side using lattice
# For ~50 particles in larger box, use spacing ~2.1
lattice         sq 2.1

region          left_box block -$(v_L0-1.0) -1.0 -$(v_H/2-0.5) $(v_H/2-0.5) -0.5 0.5
region          right_box block 1.0 $(v_L0-1.0) -$(v_H/2-0.5) $(v_H/2-0.5) -0.5 0.5

create_atoms    1 region left_box
create_atoms    1 region right_box

# Trim to exactly 100 if needed
variable        n_gas equal count(all)
print           "Created ${n_gas} gas particles"

mass            1 ${pmass}

# ============================================================================
# CREATE WALL
# ============================================================================

create_atoms    2 single 0.0 0.0 0.0
mass            2 ${wmass}

group           particles type 1
group           wall_atom type 2

print           "SETUP: $(count(particles)) gas particles + $(count(wall_atom)) wall"

# ============================================================================
# SOFTER POTENTIALS FOR STABILITY
# ============================================================================

pair_style      lj/cut 1.122462
pair_modify     shift yes

# Very soft epsilon for long-term stability
pair_coeff      1 1 0.2 1.0 1.122462
pair_coeff      1 2 0.2 1.0 1.122462
pair_coeff      2 2 0.0 1.0 1.122462

# ============================================================================
# WALLS
# ============================================================================

fix             walls_y particles wall/reflect yhi EDGE ylo EDGE
fix             walls_x particles wall/reflect xhi EDGE xlo EDGE

# ============================================================================
# INITIALIZATION
# ============================================================================

velocity        particles create ${T} 4928459 dist gaussian
velocity        particles scale ${T}
velocity        wall_atom set 0.0 0.0 0.0

timestep        ${dt}

fix             wall_yz wall_atom setforce NULL 0.0 0.0
fix             nve_p particles nve
fix             nve_w wall_atom nve

# ============================================================================
# COMPUTES
# ============================================================================

compute         temp_p particles temp
compute         ke_p particles ke
compute         ke_w wall_atom ke

variable        wall_x equal x[$(count(particles)+1)]
variable        wall_vx equal vx[$(count(particles)+1)]
variable        ke_total equal c_ke_p+c_ke_w
variable        time_lj equal step*dt

region          left_side block -${L0} 0.0 -$(v_H/2) $(v_H/2) -0.5 0.5
region          right_side block 0.0 ${L0} -$(v_H/2) $(v_H/2) -0.5 0.5

group           left_p dynamic particles region left_side every 1000
group           right_p dynamic particles region right_side every 1000

variable        n_left equal count(left_p)
variable        n_right equal count(right_p)

# ============================================================================
# OUTPUT
# ============================================================================

thermo_style    custom step v_time_lj temp c_temp_p c_ke_p c_ke_w v_ke_total &
                v_wall_x v_wall_vx v_n_left v_n_right atoms

thermo          ${thermo_freq}

dump            traj all custom ${dump_freq} traj_paper_stable.lammpstrj &
                id type x y z vx vy vz

dump_modify     traj sort id

# Log wall data every 0.1 time units
fix             wall_log all print 2000 &
                "$(step) ${time_lj} ${wall_x} ${wall_vx} ${n_left} ${n_right}" &
                file wall_paper.dat screen no &
                title "# Step Time WallX WallVx NLeft NRight"

# ============================================================================
# RUN
# ============================================================================

print           "========================================"
print           "PAPER SETUP: $(count(particles)) particles (target: 50+50)"
print           "Box size: ${L0} x ${H}"
print           "Temperature: ${T}"
print           "Wall mass: ${wmass}"
print           "Timestep: ${dt}"
print           "Target time: 305 LJ units"
print           "========================================"

print           "Phase 1: Equilibration (5 time units)..."
fix             hold wall_atom setforce 0.0 NULL NULL
run             ${hold_steps}
unfix           hold

print           "Phase 2: Free oscillation (300 time units)..."
print           "This will take ~10-15 minutes..."
run             ${run_steps}

write_data      final_paper_stable.data

print           "========================================"
print           "COMPLETE!"
print           "  Time: ${time_lj} LJ units"
print           "  Particles: $(count(particles))"
print           "  Left: ${n_left}, Right: ${n_right}"
print           "========================================"
